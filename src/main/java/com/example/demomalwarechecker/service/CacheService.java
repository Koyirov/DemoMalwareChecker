package com.example.demomalwarechecker.service;

import com.example.demomalwarechecker.model.CheckResultEvent;

import java.util.LinkedHashMap;
import java.util.Map;

public class CacheService {

    // Max size of cache. If cache size is full, we will remove the oldest entry and add the newest one
    private final int MAX_SIZE = 20;
    private final LinkedHashMap<Integer, CheckResultEvent> checkResultEvents;

    public CacheService() {
        checkResultEvents  = new LinkedHashMap<>(MAX_SIZE + 1, 1, true) {
            protected boolean removeEldestEntry(Map.Entry<Integer, CheckResultEvent> eldest) {
                return size() > MAX_SIZE;
            }
        };
    }

    public void addCheckResultEvent(String documentUrl, CheckResultEvent checkResultEvent) {
        checkResultEvents.put(documentUrl.hashCode(), checkResultEvent);
    }

    public CheckResultEvent getCheckResultEvent(String documentUrl) {
        return checkResultEvents.get(documentUrl.hashCode());
    }
}
